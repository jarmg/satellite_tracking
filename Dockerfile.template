# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
#FROM balenalib/amd64-ubuntu-python:3-disco-build
FROM balenalib/aarch64-ubuntu-python:3
# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
# RUN install_packages git

# Set our working directory
WORKDIR /usr/src/app


RUN apt-get update
RUN apt-get install software-properties-common -y


RUN apt-get install python-setuptools python-dev libindi-dev swig git gcc g++ libz-dev vim -y
RUN apt-get install git make autoconf libltdl-dev libusb-dev libexif-dev libpopt-dev libxml2-dev libjpeg-dev libgd-dev gettext autopoint -y

COPY ./utils ./utils
RUN ./utils/install_camera_utils.sh

# Copy requirements.txt first for better cache on later pushes
COPY requirements.txt requirements.txt

# ----- resin-wifi--connect ----- #
ENV DEVICE_TYPE=%%RESIN_MACHINE_NAME%%

RUN apt-get install -yq --no-install-recommends \
  dnsmasq && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

RUN curl https://github.com/balena-io/wifi-connect/releases/download/v4.2.13/wifi-connect-v4.2.13-linux-aarch64.tar.gz -L | \
  tar xvz -C /usr/src/app

# pip install python deps from requirements.txt on the resin.io build server
RUN pip install -r requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY ./src ./src
COPY ./data ./data
COPY ./server ./server

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1
ENV ROOT_DIR=/usr/src/app

# main.py will run when container starts up on the device
CMD ["/bin/bash"]
