# base-image for python on any machine using a template variable,
# see more about dockerfile templates here: https://www.balena.io/docs/learn/develop/dockerfile/
#FROM balenalib/amd64-ubuntu-python:3-disco-build
FROM balenalib/aarch64-ubuntu-python:3
# use `install_packages` if you need to install dependencies,
# for instance if you need git, just uncomment the line below.
# RUN install_packages git

# Set our working directory
WORKDIR /usr/src/app


RUN apt-get update
RUN apt-get install software-properties-common -y


# Download telescope interface lib
#RUN apt-add-repository ppa:mutlaqja/ppa
#RUN apt-get update
#RUN apt-get install indi-full 

RUN apt-get install python-setuptools python-dev libindi-dev swig git gcc g++ libz-dev vim -y
RUN apt-get install swig libz3-dev libcfitsio-dev libnova-dev -y
RUN git clone https://github.com/geehalel/pyindi-client.git pyindi

WORKDIR ./pyindi
RUN python setup.py install
WORKDIR ../

# Copy requirements.txt first for better cache on later pushes
COPY requirements.txt requirements.txt

# pip install python deps from requirements.txt on the resin.io build server
RUN pip install -r requirements.txt

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Enable udevd so that plugged dynamic hardware devices show up in our container.
ENV UDEV=1

# main.py will run when container starts up on the device
CMD ["/bin/bash"]
